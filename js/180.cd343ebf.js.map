{"version":3,"file":"js/180.cd343ebf.js","mappings":"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","sources":["webpack://front/./src/views/WeatherMap.vue","webpack://front/./node_modules/ol/events/Event.js","webpack://front/./node_modules/ol/ObjectEventType.js","webpack://front/./node_modules/ol/Disposable.js","webpack://front/./node_modules/ol/array.js","webpack://front/./node_modules/ol/functions.js","webpack://front/./node_modules/ol/obj.js","webpack://front/./node_modules/ol/events/Target.js","webpack://front/./node_modules/ol/events/EventType.js","webpack://front/./node_modules/ol/events.js","webpack://front/./node_modules/ol/Observable.js","webpack://front/./node_modules/ol/util.js","webpack://front/./node_modules/ol/Object.js","webpack://front/./node_modules/ol/AssertionError.js","webpack://front/./node_modules/ol/CollectionEventType.js","webpack://front/./node_modules/ol/Collection.js","webpack://front/./node_modules/ol/has.js","webpack://front/./node_modules/ol/asserts.js","webpack://front/./node_modules/ol/transform.js","webpack://front/./node_modules/ol/extent/Relationship.js","webpack://front/./node_modules/ol/extent.js","webpack://front/./node_modules/ol/math.js","webpack://front/./node_modules/ol/color.js","webpack://front/./node_modules/ol/style/IconImageCache.js","webpack://front/./node_modules/ol/layer/Property.js","webpack://front/./node_modules/ol/layer/Base.js","webpack://front/./node_modules/ol/render/EventType.js","webpack://front/./node_modules/ol/layer/Layer.js","webpack://front/./node_modules/ol/coordinate.js","webpack://front/./node_modules/ol/renderer/Map.js","webpack://front/./node_modules/ol/render/Event.js","webpack://front/./node_modules/ol/css.js","webpack://front/./node_modules/ol/dom.js","webpack://front/./node_modules/ol/render/canvas.js","webpack://front/./node_modules/ol/renderer/Composite.js","webpack://front/./node_modules/ol/layer/Group.js","webpack://front/./node_modules/ol/MapEvent.js","webpack://front/./node_modules/ol/MapBrowserEvent.js","webpack://front/./node_modules/ol/MapBrowserEventType.js","webpack://front/./node_modules/ol/pointer/EventType.js","webpack://front/./node_modules/ol/MapBrowserEventHandler.js","webpack://front/./node_modules/ol/MapEventType.js","webpack://front/./node_modules/ol/MapProperty.js","webpack://front/./node_modules/ol/structs/PriorityQueue.js","webpack://front/./node_modules/ol/TileState.js","webpack://front/./node_modules/ol/TileQueue.js","webpack://front/./node_modules/ol/ViewHint.js","webpack://front/./node_modules/ol/ViewProperty.js","webpack://front/./node_modules/ol/tilegrid/common.js","webpack://front/./node_modules/ol/proj/Units.js","webpack://front/./node_modules/ol/proj/Projection.js","webpack://front/./node_modules/ol/proj/epsg3857.js","webpack://front/./node_modules/ol/proj/epsg4326.js","webpack://front/./node_modules/ol/proj/projections.js","webpack://front/./node_modules/ol/proj/transforms.js","webpack://front/./node_modules/ol/sphere.js","webpack://front/./node_modules/ol/proj.js","webpack://front/./node_modules/ol/centerconstraint.js","webpack://front/./node_modules/ol/resolutionconstraint.js","webpack://front/./node_modules/ol/rotationconstraint.js","webpack://front/./node_modules/ol/easing.js","webpack://front/./node_modules/ol/geom/flat/transform.js","webpack://front/./node_modules/ol/geom/Geometry.js","webpack://front/./node_modules/ol/geom/SimpleGeometry.js","webpack://front/./node_modules/ol/geom/flat/closest.js","webpack://front/./node_modules/ol/geom/flat/deflate.js","webpack://front/./node_modules/ol/geom/flat/simplify.js","webpack://front/./node_modules/ol/geom/flat/inflate.js","webpack://front/./node_modules/ol/geom/flat/area.js","webpack://front/./node_modules/ol/geom/LinearRing.js","webpack://front/./node_modules/ol/geom/Point.js","webpack://front/./node_modules/ol/geom/flat/contains.js","webpack://front/./node_modules/ol/geom/flat/interiorpoint.js","webpack://front/./node_modules/ol/geom/flat/segments.js","webpack://front/./node_modules/ol/geom/flat/intersectsextent.js","webpack://front/./node_modules/ol/geom/flat/reverse.js","webpack://front/./node_modules/ol/geom/flat/orient.js","webpack://front/./node_modules/ol/geom/Polygon.js","webpack://front/./node_modules/ol/View.js","webpack://front/./node_modules/ol/control/Control.js","webpack://front/./node_modules/ol/control/Attribution.js","webpack://front/./node_modules/ol/control/Rotate.js","webpack://front/./node_modules/ol/control/Zoom.js","webpack://front/./node_modules/ol/control/defaults.js","webpack://front/./node_modules/ol/interaction/Property.js","webpack://front/./node_modules/ol/interaction/Interaction.js","webpack://front/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://front/./node_modules/ol/interaction/Pointer.js","webpack://front/./node_modules/ol/events/condition.js","webpack://front/./node_modules/ol/interaction/DragPan.js","webpack://front/./node_modules/ol/interaction/DragRotate.js","webpack://front/./node_modules/ol/render/Box.js","webpack://front/./node_modules/ol/interaction/DragBox.js","webpack://front/./node_modules/ol/interaction/DragZoom.js","webpack://front/./node_modules/ol/events/KeyCode.js","webpack://front/./node_modules/ol/interaction/KeyboardPan.js","webpack://front/./node_modules/ol/interaction/KeyboardZoom.js","webpack://front/./node_modules/ol/Kinetic.js","webpack://front/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://front/./node_modules/ol/interaction/PinchRotate.js","webpack://front/./node_modules/ol/interaction/PinchZoom.js","webpack://front/./node_modules/ol/interaction/defaults.js","webpack://front/./node_modules/ol/size.js","webpack://front/./node_modules/ol/Map.js","webpack://front/./node_modules/ol/layer/TileProperty.js","webpack://front/./node_modules/ol/layer/BaseTile.js","webpack://front/./node_modules/ol/ImageState.js","webpack://front/./node_modules/ol/renderer/Layer.js","webpack://front/./node_modules/ol/renderer/canvas/Layer.js","webpack://front/./node_modules/ol/Tile.js","webpack://front/./node_modules/ol/Image.js","webpack://front/./node_modules/ol/ImageTile.js","webpack://front/./node_modules/ol/reproj/common.js","webpack://front/./node_modules/ol/reproj/Triangulation.js","webpack://front/./node_modules/ol/reproj.js","webpack://front/./node_modules/ol/reproj/Tile.js","webpack://front/./node_modules/ol/TileRange.js","webpack://front/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://front/./node_modules/ol/layer/Tile.js","webpack://front/./node_modules/ol/structs/LRUCache.js","webpack://front/./node_modules/ol/tilecoord.js","webpack://front/./node_modules/ol/TileCache.js","webpack://front/./node_modules/ol/source/TileEventType.js","webpack://front/./node_modules/ol/source/Source.js","webpack://front/./node_modules/ol/tilegrid/TileGrid.js","webpack://front/./node_modules/ol/tilegrid.js","webpack://front/./node_modules/ol/source/Tile.js","webpack://front/./node_modules/ol/tileurlfunction.js","webpack://front/./node_modules/ol/source/UrlTile.js","webpack://front/./node_modules/ol/source/TileImage.js","webpack://front/./node_modules/ol/source/XYZ.js","webpack://front/./node_modules/ol/Overlay.js","webpack://front/src/views/WeatherMap.vue","webpack://front/./src/views/WeatherMap.vue?d0e6","webpack://front/./src/views/WeatherMap.vue?4f28"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"home\"},[[_c('div',{staticClass:\"main-container main-container-weathermap\"},[_vm._m(0),_c('div',{attrs:{\"id\":\"map\"}}),_vm._l((_vm.datasetPerThreeHours.locations.location),function(locat){return _c('div',{key:locat.parameterSet.parameter.parameterValue,staticClass:\"mark_mountain_wrapper\"},[_c('router-link',{staticClass:\"overlay link\",attrs:{\"id\":'MtId'+ locat.parameterSet.parameter.parameterValue,\"to\":'/mountain/' + locat.parameterSet.parameter.parameterValue}},[_c('div',{staticClass:\"mark_mountain_info_wrapper\"},[_c('div',{staticClass:\"mark_mountain_info_name\"},[_vm._v(\" \"+_vm._s(locat.locationName)+\" \")]),_c('div',{staticClass:\"mark_mountain_info_value\"},[_c('div',[_vm._v(\" \"+_vm._s(locat.weatherElement[0].time[0].elementValue.value)+\"°C\")]),_c('div',[_vm._v(_vm._s(locat.weatherElement[3].time[0].elementValue.value)+\"%\")])]),_c('div',{staticClass:\"mark_mountain_info_Wx\"},[_c('img',{attrs:{\"src\":'https://www.cwb.gov.tw/V8/assets/img/weather_icons/weathers/svg_icon/day/' + locat.weatherElement[9].time[0].elementValue[1].value +'.svg',\"title\":locat.weatherElement[9].time[0].elementValue[0].value,\"alt\":locat.weatherElement[9].time[0].elementValue[0].value}})])])])],1)})],2)]],2)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"title-wrapper\"},[_c('h1',[_vm._v(\"山岳地圖\")])])\n}]\n\nexport { render, staticRenderFns }","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.1.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    } else if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    } else if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output, dimension) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output, dimension) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (dest === undefined) {\n      dest = [size, size];\n    } else {\n      dest[0] = size;\n      dest[1] = size;\n    }\n    return dest;\n  }\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(event.element);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {Map}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {Map}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const targetElement = this.getTargetElement();\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const defaultView = this.getOwnerDocument().defaultView;\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(defaultView, EventType.RESIZE, this.updateSize, this),\n      ];\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  const canvas = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  pixelContext = canvas.getContext('2d');\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link module:ol/Map~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../Map.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, tempExtent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      tempTileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    if (!this.tileGrid) {\n      return null;\n    }\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.getInterpolate()\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","<template>\r\n  <div class=\"home\">\r\n    <template>\r\n      <div class=\"main-container main-container-weathermap\">\r\n        <div class=\"title-wrapper\">\r\n          <h1>山岳地圖</h1>\r\n        </div>\r\n        <div id=\"map\"></div>\r\n        <div class=\"mark_mountain_wrapper\" v-for=\"locat in datasetPerThreeHours.locations.location\"\r\n          v-bind:key=\"locat.parameterSet.parameter.parameterValue\">\r\n          <!-- 拿掉屬性 target=\"_blank\"，不會以新開分頁的方式開啟連結 -->\r\n          <router-link class=\"overlay link\" v-bind:id=\"'MtId'+ locat.parameterSet.parameter.parameterValue\"\r\n            v-bind:to=\"'/mountain/' + locat.parameterSet.parameter.parameterValue\">\r\n            <div class=\"mark_mountain_info_wrapper\">\r\n              <div class=\"mark_mountain_info_name\">\r\n                {{locat.locationName}}\r\n              </div>\r\n              <div class=\"mark_mountain_info_value\">\r\n                <div> {{locat.weatherElement[0].time[0].elementValue.value}}°C</div>\r\n                <div>{{locat.weatherElement[3].time[0].elementValue.value}}%</div>\r\n              </div>\r\n              <div class=\"mark_mountain_info_Wx\">\r\n                <img\r\n                  v-bind:src=\"'https://www.cwb.gov.tw/V8/assets/img/weather_icons/weathers/svg_icon/day/' + locat.weatherElement[9].time[0].elementValue[1].value +'.svg'\"\r\n                  v-bind:title=\"locat.weatherElement[9].time[0].elementValue[0].value\"\r\n                  v-bind:alt=\"locat.weatherElement[9].time[0].elementValue[0].value\">\r\n              </div>\r\n            </div>\r\n          </router-link>\r\n        </div>\r\n      </div>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport indexAPI from '../api/index'\r\n\r\nimport Map from 'ol/Map';\r\nimport View from 'ol/View';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport XYZ from 'ol/source/XYZ';\r\n\r\nimport Overlay from 'ol/Overlay'\r\nimport { fromLonLat, toLonLat } from 'ol/proj';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dataCategory: {\r\n        oneWeek: 'F-B0053-031', //登山一週24小時天氣預報\r\n        oneWeekDayNight: 'F-B0053-033', //登山一週日夜天氣預報 33\r\n        perThreeHours: 'F-B0053-035' //登山三天3小時天氣預報\r\n      },\r\n      dataType: 'JSON',\r\n      datasetPerThreeHours: {\r\n        locations: {\r\n          location: []\r\n        }\r\n      },\r\n      isLoading: true\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchDatasetPerThreeHours() {\r\n      try {\r\n        this.isLoading = true\r\n        const dataCategory = this.dataCategory.perThreeHours\r\n        const dataType = this.dataType\r\n        const response = await indexAPI.getWeatherData({ dataCategory, dataType })\r\n        if (response.status !== 200) {\r\n          throw new Error()\r\n        }\r\n        this.datasetPerThreeHours = {\r\n          ...response.data.dataset\r\n        }\r\n        this.isLoading = false\r\n      } catch (error) {\r\n        this.isLoading = false\r\n        console.warn(error)\r\n      }\r\n    },\r\n    initMap() {\r\n      const map = new Map({\r\n        target: 'map',\r\n        layers: [\r\n          new TileLayer({\r\n            source: new XYZ({\r\n              url: 'https://tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n            })\r\n          })\r\n        ],\r\n        view: new View({\r\n          center: [13450000, 2720000],\r\n          zoom: 8,\r\n        })\r\n      })\r\n\r\n      this.datasetPerThreeHours.locations.location.forEach(locat => {\r\n        this.markMountains(map, locat)\r\n      })\r\n    },\r\n    markMountains(map, locat) {\r\n      const pos = fromLonLat([Number(locat.lon), Number(locat.lat)])\r\n      const router_link_id = 'MtId' + locat.parameterSet.parameter.parameterValue\r\n      const mt_label = new Overlay({\r\n        position: pos,\r\n        element: document.getElementById(router_link_id)\r\n      })\r\n      map.addOverlay(mt_label)\r\n    },\r\n    adjust() {\r\n      // 校正奇萊南峰位置(氣象局的座標跟南華山(能高北峰)重複)\r\n      this.datasetPerThreeHours.locations.location[46].lat = '24.066'\r\n      this.datasetPerThreeHours.locations.location[46].lon = '121.280036765'\r\n    }\r\n  },\r\n  async mounted() {\r\n    try {\r\n      await this.fetchDatasetPerThreeHours()\r\n      this.adjust()\r\n      this.initMap()\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.main-container-weathermap {\r\n  overflow: hidden;\r\n}\r\n\r\n.main-container-weathermap .title-wrapper {\r\n  position: relative;\r\n  width: 250px;\r\n  margin: 0px auto;\r\n}\r\n\r\n#map {\r\n  /* 讓手機板地圖左右貼滿銀幕，把 main-container 讀 padding-left 15px 減回去 */\r\n  position: relative;\r\n  top: 0px;\r\n  left: -15px;\r\n  display: block;\r\n  width: 100vw;\r\n  height: 450px;\r\n  margin: 0px auto;\r\n}\r\n\r\n.mark_mountain_info_wrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 4px 4px 1px;\r\n  border: 1px solid rgb(85, 85, 85, 0.5);\r\n  border-radius: 5px;\r\n  text-decoration: none;\r\n  color: rgb(0, 0, 0);\r\n  font-size: 0.7rem;\r\n  background-color: rgb(255, 255, 255, 0.75);\r\n}\r\n\r\n.mark_mountain_info_name {\r\n  margin-bottom: 2px;\r\n  font-weight: 700;\r\n}\r\n\r\n.mark_mountain_info_value {\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n\r\n.mark_mountain_info_value div:nth-child(1) {\r\n  margin-right: 4px;\r\n  color: firebrick;\r\n  font-weight: 400;\r\n}\r\n\r\n.mark_mountain_info_value div:nth-child(2) {\r\n  color: darkblue;\r\n  font-weight: 400;\r\n}\r\n\r\n.mark_mountain_info_Wx img {\r\n  width: 25px;\r\n  height: 25px;\r\n  object-fit: cover;\r\n}\r\n\r\n@media (min-width: 375px) {\r\n  .main-container-weathermap .title-wrapper {\r\n    width: 350px;\r\n  }\r\n\r\n  #map {\r\n    width: 100vw;\r\n    height: 600px;\r\n  }\r\n\r\n  .mark_mountain_info_wrapper {\r\n    padding: 4px 4px 2px;\r\n    font-size: 0.8rem;\r\n  }\r\n}\r\n\r\n@media (min-width: 576px) {\r\n  .main-container-weathermap .title-wrapper {\r\n    width: 550px;\r\n  }\r\n\r\n  #map {\r\n    position: static;\r\n    left: 0px;\r\n    width: 550px;\r\n    height: 700px;\r\n  }\r\n\r\n  .mark_mountain_info_wrapper {\r\n    padding: 5px 5px 2px;\r\n    font-size: 1rem;\r\n  }\r\n\r\n  .mark_mountain_info_Wx img {\r\n    width: 32px;\r\n    height: 32px;\r\n  }\r\n}\r\n\r\n@media (min-width: 768px) {\r\n  .main-container-weathermap .title-wrapper {\r\n    width: 730px;\r\n  }\r\n\r\n  #map {\r\n    width: 730px;\r\n    height: 750px;\r\n  }\r\n\r\n  .mark_mountain_info_Wx img {\r\n    width: 35px;\r\n    height: 35px;\r\n  }\r\n}\r\n\r\n@media (min-width: 992px) {\r\n  .main-container-weathermap .title-wrapper {\r\n    width: 950px;\r\n  }\r\n\r\n  #map {\r\n    width: 950px;\r\n  }\r\n}\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./WeatherMap.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./WeatherMap.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./WeatherMap.vue?vue&type=template&id=55da8022&\"\nimport script from \"./WeatherMap.vue?vue&type=script&lang=js&\"\nexport * from \"./WeatherMap.vue?vue&type=script&lang=js&\"\nimport style0 from \"./WeatherMap.vue?vue&type=style&index=0&id=55da8022&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","_m","attrs","_l","datasetPerThreeHours","locations","location","locat","key","parameterSet","parameter","parameterValue","_v","_s","locationName","weatherElement","time","elementValue","value","staticRenderFns","BaseEvent","constructor","type","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","PROPERTYCHANGE","Disposable","disposed","dispose","disposeInternal","numberSafeCompareFunction","a","b","linearFindNearest","arr","direction","n","length","i","extend","data","extension","Array","isArray","equals","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","prototype","slice","call","arguments","arrayEquals","apply","clear","object","property","isEmpty","Target","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","indexOf","splice","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","listen","thisArg","once","bind","originalListener","eventsKey","listenOnce","unlistenByKey","Observable","EventTarget","on","onInternal","onceInternal","un","unInternal","revision_","changed","EventType","getRevision","len","ol_key","unByKey","abstract","Error","uidCounter_","getUid","obj","ol_uid","String","ObjectEvent","oldValue","BaseObject","values","values_","setProperties","get","hasOwnProperty","getKeys","getProperties","assign","hasProperties","notify","eventType","ObjectEventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","messages","AssertionError","code","message","name","ADD","REMOVE","Property","LENGTH","CollectionEvent","element","Collection","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","forEach","f","getArray","item","insertAt","elem","CollectionEventType","removeAt","remove","prev","setAt","except","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","test","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","error","assert","assertion","errorCode","create","transform","coordinate","x","y","compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","makeInverse","det","determinant","c","d","e","mat","transformStringDiv","toString","transformString","join","node","document","createElement","style","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","dest","minX","min","minY","maxX","max","maxY","createOrUpdate","clone","closestSquaredDistanceXY","dx","dy","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","Infinity","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","end","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","size","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","width","height","l","clamp","squaredSegmentDistance","t","squaredDistance","solveLinearSystem","maxRow","maxEl","abs","r","absValue","tmp","j","coef","k","m","toRadians","angleInDegrees","PI","modulo","lerp","toFixed","decimals","factor","pow","round","floor","ceil","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","fromString","MAX_CACHE_SIZE","cache","cacheSize","s","fromStringInternal_","asArray","g","exec","hasAlpha","parseInt","substr","startsWith","split","map","Number","normalize","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","getKey","setSize","maxCacheSize","colorString","shared","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","BaseLayer","background_","background","properties","LayerProperty","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","state","layer","getZIndex","getOpacity","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","rendered","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","getData","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","getMapInternal","RenderEventType","renderEvent","layerStatesArray","layerState","some","arrayLayerState","createRenderer","hasRenderer","inView","viewState","zoom","add","delta","coordinate1","coordinate2","rotate","cosAngle","sinAngle","scale","wrapX","projection","canWrapX","worldWidth","worldsAway","getWorldsAway","sourceExtentWidth","projectionExtent","MapRenderer","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","composeTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","sort","hasFeatureAtCoordinate","hasFeature","getMap","scheduleExpireIconCache","iconImageCache","postRenderFunctions","expireIconCache","RenderEvent","inversePixelTransform","context","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","createCanvasContext2D","canvasPool","settings","canvas","shift","getContext","releaseCanvas","clearRect","outerWidth","offsetWidth","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","checkedFonts","measureFont","measureContext","textHeights","retries","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","measureElement","measureText","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","position","container","getViewport","firstChild","children_","renderedVisible_","display","declutterLayers","previousElement","layerIndex","sourceState","renderDeclutter","GroupEvent","LAYERS","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","id","layersArray","registerLayerListeners_","listenerKeys","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","setTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","MOVESTART","MOVEEND","LOADSTART","LOADEND","LAYERGROUP","SIZE","TARGET","VIEW","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","IDLE","LOADING","LOADED","EMPTY","TileQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","getTilesLoading","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","log","sqrt","ANIMATING","INTERACTING","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","METERS_PER_UNIT","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","getPointResolutionFunc","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","replace","transforms","destination","sourceCode","destinationCode","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","showCoordinateWarning","disableCoordinateWarning","disable","hide","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","pointResolution","getter","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","fromLonLat","equivalent","equalUnits","transformFunc","sourceProjection","destinationProjection","getTransformFunc","getTransform","transformExtent","userProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","console","warn","toUserExtent","fromUserExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","power","tolerance","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","easeIn","easeOut","inAndOut","linear","transform2D","anchor","anchorX","anchorY","translate","tmpTransform","createTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","simplify","getType","intersectsExtent","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","SimpleGeometry","layout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","setLayout","nesting","getLayoutForStride","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","jj","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","snap","quantize","quantizeArray","simplifiedEnds","inflateCoordinates","inflateCoordinatesArray","linearRing","twiceArea","linearRings","LinearRing","maxDelta_","maxDeltaRevision_","linearRingArea","Point","linearRingContainsExtent","outside","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLinearRing","intersectsLinearRingArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","orientLinearRings","reverse","reverseCoordinates","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","fromExtent","DEFAULT_MIN_ZOOM","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","padding_","padding","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","animateInternal","animationCount","animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","h","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","constrainResolution","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","centerNone","defaultMaxZoom","defaultZoomFactor","smoothResolutionConstraint","projExtent","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","rotationNone","coordinatesEqual","Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","MapEventType","mapEvent","getElementById","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","view","getView","contains","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","controls","zoomControl","zoomOptions","rotateControl","rotateOptions","attributionControl","attribution","attributionOptions","ACTIVE","Interaction","setActive","getActive","InteractionProperty","mapBrowserEvent","active","pan","zoomByDelta","DoubleClickZoom","delta_","stopEvent","browserEvent","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","centroid","all","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focus","targetElement","getTargetElement","activeElement","focusWithTabindex","hasAttribute","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroidFromPointers","update","scaleCoordinate","begin","distance","getAngle","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","DragRotate","lastAngle_","getSize","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","top","getOverlayContainer","setPixels","createOrUpdateGeometry","pixels","getGeometry","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","BOXCANCEL","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom","out_","out","UP","DOWN","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","KeyCode","mapUnitsDelta","KeyboardZoom","charCode","charCodeAt","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","viewportPosition","getBoundingClientRect","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","hasArea","toSize","removeLayerMapProperty","setLayerMapProperty","Map","optionsInternal","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","targetChangeHandlerKeys_","defaultControls","defaultInteractions","overlays_","overlays","overlayIdIndex_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","getId","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","forEachFeatureAtPixel","getFeaturesAtPixel","features","getAllLayers","addLayersFrom","layerGroup","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","cont","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","defaultView","updateSize","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","mapId","renderTargets","nextExtent","moveStart","idle","setLayerGroup","oldLayerGroup","computedStyle","parseFloat","getClientRects","PRELOAD","USE_INTERIM_TILES_ON_ERROR","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","image","ImageState","renderIfReadyAndVisible","loadImage","imageState","pixelContext","createPixelContext","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","getImageData","col","row","drawImage","err","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","save","beginPath","moveTo","lineTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","Tile","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","inTransition","endTransition","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","catch","ImageTile","tileLoadFunction","crossOrigin_","src_","image_","unlisten_","tileLoadFunction_","getImage","setImage","unlistenImage_","handleImageError_","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","ctx","fillStyle","fillRect","ERROR_THRESHOLD","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","isFinite","isNotFinite","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","closePath","restore","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","globalCompositeOperation","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","triangulation","sources","gutter","renderEdges","imageSmoothingEnabled","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","step","strokeStyle","lineWidth","stroke","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","TileRange","containsTileRange","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileState","getTile","tileSource","layerExtent","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","getOrigin","tileSize","getGutterForProjection","viewResolution","viewCenter","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","toTransformString","getInterpolate","clips","clipZs","currentClip","zs","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","origin","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alpha","alphaChanged","globalAlpha","postRenderFunction","expireCache","tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","TileLayer","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","fromKey","hash","withinExtentAndZ","getFullTileRange","TileCache","pruneExceptNewestZ","TILELOADSTART","TILELOADEND","TILELOADERROR","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","reject","refresh","setAttributions","attributionLike","tmpTileCoord","DECIMALS","TileGrid","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordResolution","opt_direction","fullTileRanges","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileGrid","scaleSize","getTileCoordForTileUrlFunction","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","expandUrl","url","urls","startCharCode","stopCharCode","fromCharCode","stop","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","XYZ","ELEMENT","OFFSET","POSITION","POSITIONING","Overlay","insertFirst","autoPan","transform_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","getOptions","dataCategory","oneWeek","oneWeekDayNight","perThreeHours","dataType","isLoading","methods","initMap","markMountains","adjust","component"],"sourceRoot":""}